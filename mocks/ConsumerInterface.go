// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	rabbitmq "github.com/wagslane/go-rabbitmq"
)

// ConsumerInterface is an autogenerated mock type for the ConsumerInterface type
type ConsumerInterface struct {
	mock.Mock
}

// Disconnect provides a mock function with given fields:
func (_m *ConsumerInterface) Disconnect() {
	_m.Called()
}

// StartConsuming provides a mock function with given fields: handler, queue, routingKeys, optionFuncs
func (_m *ConsumerInterface) StartConsuming(handler rabbitmq.Handler, queue string, routingKeys []string, optionFuncs ...func(*rabbitmq.ConsumeOptions)) error {
	_va := make([]interface{}, len(optionFuncs))
	for _i := range optionFuncs {
		_va[_i] = optionFuncs[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, handler, queue, routingKeys)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 error
	if rf, ok := ret.Get(0).(func(rabbitmq.Handler, string, []string, ...func(*rabbitmq.ConsumeOptions)) error); ok {
		r0 = rf(handler, queue, routingKeys, optionFuncs...)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// StopConsuming provides a mock function with given fields: consumerName, noWait
func (_m *ConsumerInterface) StopConsuming(consumerName string, noWait bool) {
	_m.Called(consumerName, noWait)
}
